# Generated by Django 5.1.3 on 2024-11-22 11:52

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                ("question_text", models.TextField(unique=True)),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("active", "active"), ("inactive", "inactive")],
                        default="active",
                        max_length=100,
                        no_check_for_status=True,
                    ),
                ),
                ("rule_section", models.CharField(blank=True, max_length=250, null=True)),
                ("rule_scenario", models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TestAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "token",
                    model_utils.fields.UrlsafeTokenField(
                        editable=False, factory=None, max_length=32, unique=True
                    ),
                ),
                ("participant_name", models.CharField(max_length=255, verbose_name="Your name")),
                ("final_correct", models.PositiveIntegerField(blank=True, null=True)),
                ("final_answered", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                ("answer_text", models.TextField()),
                ("is_correct", models.BooleanField(default=False)),
                (
                    "status",
                    model_utils.fields.StatusField(
                        choices=[("active", "active"), ("inactive", "inactive")],
                        default="active",
                        max_length=100,
                        no_check_for_status=True,
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="pp.question"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TestAttemptAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                ("question_text", models.TextField()),
                ("answer_text", models.TextField()),
                ("is_correct", models.BooleanField(default=False)),
                ("answer", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="pp.answer")),
                (
                    "attempt",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="pp.testattempt"),
                ),
            ],
            options={
                "unique_together": {("answer", "attempt")},
            },
        ),
        migrations.AddField(
            model_name="testattempt",
            name="answers",
            field=models.ManyToManyField(through="pp.TestAttemptAnswer", to="pp.answer"),
        ),
        migrations.CreateModel(
            name="TestGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "token_owner",
                    model_utils.fields.UrlsafeTokenField(
                        editable=False, factory=None, max_length=32, unique=True
                    ),
                ),
                (
                    "token_test_taker",
                    model_utils.fields.UrlsafeTokenField(
                        editable=False, factory=None, max_length=32, unique=True
                    ),
                ),
                (
                    "group_name",
                    models.CharField(help_text="E.g. 'Rookies 2024' or 'ERD rules checkuo'", max_length=255),
                ),
                ("owner_email", models.EmailField(max_length=254, verbose_name="Your email")),
                (
                    "info_for_test_takers",
                    models.TextField(
                        blank=True,
                        help_text="Any test taker will see this before beginning their test.",
                        null=True,
                        verbose_name="Anything you want to share with people taking your test (optional)",
                    ),
                ),
                ("questions", models.ManyToManyField(to="pp.question")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="testattempt",
            name="test_group",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="pp.testgroup"),
        ),
    ]
